// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios15.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Roboflow
import CoreML
import Foundation
@_exported import Roboflow
import Swift
import UIKit
import Vision
import _Concurrency
extension Swift.String : Swift.Error {
}
@objc @_inheritsConvenienceInitializers public class RFObjectDetectionModel : ObjectiveC.NSObject {
  @objc override dynamic public init()
  public func configure(threshold: Swift.Double, overlap: Swift.Double, maxObjects: Swift.Float)
  @available(*, renamed: "detect(image:)")
  public func detect(image: UIKit.UIImage, completion: @escaping (([Roboflow.Detection]?, Swift.Error?) -> Swift.Void))
  
  #if compiler(>=5.3) && $AsyncAwait
  public func detect(image: UIKit.UIImage) async -> ([Roboflow.Detection]?, Swift.Error?)
  #endif

  @objc deinit
}
public struct Detection {
}
@objc public class RoboflowWrapper : ObjectiveC.NSObject {
  public init(apiKey: Swift.String)
  @available(*, renamed: "load(model:modelVersion:)")
  public func load(model: Swift.String, modelVersion: Swift.Int, completion: @escaping (Roboflow.RFObjectDetectionModel?, Swift.Error?, Swift.String, Swift.String) -> ())
  
  #if compiler(>=5.3) && $AsyncAwait
  public func load(model: Swift.String, modelVersion: Swift.Int) async -> (Roboflow.RFObjectDetectionModel?, Swift.Error?, Swift.String, Swift.String)
  #endif

  @objc deinit
}
